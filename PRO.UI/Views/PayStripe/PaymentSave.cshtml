@model PRO.UI.Models.MembershipContactInfoModel
@{
    ViewBag.Title = "Stripe Pay";
}


<h2>Account Confirmation</h2>

@if (ViewBag.ErrorMessage != "")
{
    <h4><span class="label label-danger">ERROR: @ViewBag.ErrorMessage</span></h4>
}

@using (Html.BeginForm("ContactInfo", "Membership", FormMethod.Post))
{
    @Html.HiddenFor(model => model.MembershipId, new { @Value = Model.MembershipId })
    @Html.HiddenFor(model => model.MembershipTitle, new { @Value = Model.MembershipTitle })
    @Html.HiddenFor(model => model.Price, new { @Value = Model.Price })
    @Html.HiddenFor(model => model.Email, new { @Value = Model.Email })
    @Html.HiddenFor(model => model.City, new { @Value = Model.City })
    @Html.HiddenFor(model => model.FirstName, new { @Value = Model.FirstName })
    @Html.HiddenFor(model => model.LastName, new { @Value = Model.LastName })
    @Html.HiddenFor(model => model.TokenID, new { @Value = Model.TokenID })
    @Html.HiddenFor(model => model.GatewayId, new { @Value = Model.GatewayId })
    @Html.HiddenFor(model => model.GatewayName, new { @Value = Model.GatewayName })

    <div class="form-horizontal">
        <h4>Your contact information.</h4>
        <hr />
        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="controls">
                    <p class="form-control-static">@Model.Email</p>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("FirstName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="controls">
                    <p class="form-control-static">@Model.FirstName</p>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("LastName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="controls">
                    <p class="form-control-static">@Model.LastName</p>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="controls">
                    <p class="form-control-static">@Model.City</p>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Back" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (ViewBag.ErrorMessage == "")
{
    <form method="POST" action="@Url.Action("PaymentReceive")" id="payment-form">

        <div class="form-horizontal">
            <h4>Payment Confirmation</h4>
            <hr />
            <span class="payment-errors"></span>

            <div class="form-group">
                <div class="control-label col-md-2">Card Number</div>
                <div class="col-md-10">
                    <input type="text" size="20" data-stripe="number">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">Expiration (MM/YY)</div>
                <div class="col-md-10">
                    <input type="text" size="2" data-stripe="exp_month"> / <input type="text" size="2" data-stripe="exp_year">
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">CVC</div>
                <div class="col-md-10">
                    <input type="text" size="4" data-stripe="cvc">
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit Payment" class="btn btn-default" />
                </div>
            </div>
        </div>

        <input type="hidden" name="Email" value="@Model.Email" />
        <input type="hidden" name="name" value="@Model.FirstName @Model.LastName" data-stripe="name" />
        <input type="hidden" name="City" value="@Model.City" />
        <input type="hidden" name="FirstName" value="@Model.FirstName" />
        <input type="hidden" name="LastName" value="@Model.LastName" />
        <input type="hidden" name="TokenID" value="@Model.TokenID" />
        <input type="hidden" name="Price" value="@Model.Price" />
        <input type="hidden" name="MembershipId" value="@Model.MembershipId" />
        <input type="hidden" name="MembershipTitle" value="@Model.MembershipTitle" />
        @Html.HiddenFor(model => model.GatewayId, new { @Value = Model.GatewayId })
        @Html.HiddenFor(model => model.GatewayName, new { @Value = Model.GatewayName })
    </form>
}

@section Scripts
{
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    @*<script src="@Url.Content("~/Scripts/jqueryFoo.js")"></script>*@
    <script type="text/javascript">
        Stripe.setPublishableKey('pk_test_wHSnAxGvXg823aRUed7k4gXt');

        $(function () {
            var $form = $('#payment-form');
            $form.submit(function (event) {
                // Disable the submit button to prevent repeated clicks:
                $form.find('.submit').prop('disabled', true);

                // Request a token from Stripe:
                Stripe.card.createToken($form, stripeResponseHandler);

                // Prevent the form from being submitted:
                return false;
            });
        });

        function stripeResponseHandler(status, response) {

            // Grab the form:
            var $form = $('#payment-form');

            if (response.error) { // Problem!
                alert(response.error.message);
                // Show the errors on the form:
                $form.find('.payment-errors').text(response.error.message);
                $form.find('.submit').prop('disabled', false); // Re-enable submission

            } else { // Token was created!

                // Get the token ID:
                var token = response.id;
                // Insert the token ID into the form so it gets submitted to the server:
                $form.append($('<input type="hidden" name="TransactionToken">').val(token));

                // Submit the form:
                $form.get(0).submit();
            }
        };

    </script>
}
